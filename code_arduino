//ARDUINO 1.0+ ONLY
//ARDUINO 1.0+ ONLY
#include <Ethernet.h>
#include <SPI.h>
#include <Servo.h>

////////////////////////////////////////////////////////////////////////
//CONFIGURE
////////////////////////////////////////////////////////////////////////
byte server[] = {5, 135, 188, 103}; 

//The location to go to on the server
//make sure to keep HTTP/1.0 at the end, this is telling it what type of file it is
String location = "/little_umbrella/index.php?city=paris HTTP/1.0";

// if need to change the MAC address (Very Rare)
byte mac[] = { 0x00, 0xAA, 0xBB, 0xCC, 0xDE, 0x02 };
////////////////////////////////////////////////////////////////////////

EthernetClient client;

char inString[32]; // string for incoming serial data
int stringPos = 0; // string index counter
boolean startRead = false; // is reading?
int umbrella_status = 0;

Servo monServo;

void setup(){
  Ethernet.begin(mac);
  Serial.begin(9600);
   monServo.attach(9); 
  // remettre l'angle à 0 degrés
  monServo.write( 0 );
  umbrella_status = 0;
  
}


void loop(){
  String pageValue = connectAndRead(); //connect to the server and read the output

  Serial.println(pageValue); //print out the findings.
  
  if (pageValue == "1") {
    Serial.println("up");
   
   //  monServo.write( 0 );
     if (umbrella_status !=1) {
       for( int iAngle=0; iAngle<= 50; iAngle+=10 )
      { 
        monServo.write(iAngle);
        delay( 10 );
      }
     } 
      umbrella_status = 1;
  }
  
   if (pageValue == "0") {
     Serial.println("down");
      //monServo.write( 0 );
    
      // Angle décroissant progressif
       if (umbrella_status == 1) {
        for( int iAngle = 50; iAngle>=0; iAngle-- )
        {
          monServo.write( iAngle );
          delay( 10 );
        }
       }
         umbrella_status = 0;
    
  }  


  delay(2000); //wait 5 seconds before connecting again
}

String connectAndRead(){
  //connect to the server

  Serial.println("connecting...");

  //port 80 is typical of a www page
  if (client.connect(server, 80)) {
    Serial.println("connected");
    client.print("GET ");
    client.println(location);
    client.println("Host: mathemagie.net");
    client.println();

    //Connected - Read the page
    return readPage(); //go and read the output

  }else{
    return "connection failed";
  }

}

String readPage(){
  //read the page, and capture & return everything between '<' and '>'

  stringPos = 0;
  memset( &inString, 0, 32 ); //clear inString memory

  while(true){

    if (client.available()) {
      char c = client.read();
        //Serial.print(c);

    

      if (c == '<' ) { //'<' is our begining character
        startRead = true; //Ready to start reading the part 
      }else if(startRead){

        if(c != '>'){ //'>' is our ending character
          inString[stringPos] = c;
          stringPos ++;
        }else{
          //got what we need here! We can disconnect now
          startRead = false;
          client.stop();
          client.flush();
          Serial.println("disconnecting.");
          return inString;

        }

      }
    }

  }

}